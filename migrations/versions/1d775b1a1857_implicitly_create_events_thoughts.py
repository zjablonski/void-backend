"""implicitly create events/thoughts

Revision ID: 1d775b1a1857
Revises: d65577133ba8
Create Date: 2024-03-02 17:43:08.044049

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1d775b1a1857'
down_revision: Union[str, None] = 'd65577133ba8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('audio_logs', sa.Column('is_processing_complete', sa.Boolean(), nullable=True))
    op.add_column('audio_logs', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.drop_column('audio_logs', 'raw_events')
    op.drop_column('audio_logs', 'raw_thoughts')
    op.add_column('events', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('things', sa.Column('status', sa.String(), nullable=True))
    op.add_column('thoughts', sa.Column('is_active', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('thoughts', 'is_active')
    op.drop_column('things', 'status')
    op.drop_column('events', 'is_active')
    op.add_column('audio_logs', sa.Column('raw_thoughts', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('audio_logs', sa.Column('raw_events', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('audio_logs', 'updated_at')
    op.drop_column('audio_logs', 'is_processing_complete')
    # ### end Alembic commands ###
